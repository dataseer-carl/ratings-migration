file.path("~/Data/ratings-migration")
getwd()
cache.path <- file.path(".", "Data")
stage.path <- file.path("~/Data/ratings-migration")
library(googledrive)
(dataset.files <- source.path %>% drive_ls())
source.path <- file.path("~/Data/DataLake/Fitch/Sovereign Ratings History/")
(dataset.files <- source.path %>% drive_ls())
source.path <- file.path("~/Data/DataLake/Fitch/Sovereign Ratings History/data")
(dataset.files <- source.path %>% drive_ls())
data.file <- "data00_sanitised rating actions.rds" # Select file for download
data.id <- file.path(source.path, data.file) %>% drive_get()
data.id <- file.path(source.path, data.file) %>% drive_get()
library(googledrive)
drive_auth()
data.id <- file.path(source.path, data.file) %>% drive_get()
## List extant data files
(dataset.files <- source.path %>% drive_ls())
cache.path <- file.path(".", "Data")
stage.path <- file.path("~/Data/ratings-migration")
source.path <- file.path("~/Data/DataLake/Fitch/Sovereign Ratings History/data")
library(googledrive)
drive_auth()
## List extant data files
(dataset.files <- source.path %>% drive_ls())
library(dplyr)
library(lubridate)
load(file.path(".", "Data", "ref_ratings.RData"))
load(file.path(".", "Data", "ref_ratings.RData"))
ratings.df <- readRDS(file.path(data.dir, "Data", "data00_sanitised rating actions.rds"))
file.path(".", "Data", "ref_ratings.RData") %>% load()
ratings.df <- file.path(".", "Data", "data00_sanitised rating actions.rds") %>% readRDS()
str(ratings.df)
max.date <- as.Date("2012-08-24") # Last update
end.period <- eoMonth(year(max.date), month(max.date), isWeekday = FALSE)
source("./Scripts/template.R")
end.period <- eoMonth(year(max.date), month(max.date), isWeekday = FALSE)
periods.ls <- lapply(
countries.ls,
function(temp.country){
# temp.country <- "Philippines"
test.df <- ratings.df %>%
filter(Country == temp.country) %>%
arrange(Date)
### Start period
test.min.date <- min(test.df$Date)
start.period <- eoMonth(year(test.min.date), month(test.min.date), isWeekday = FALSE)
periods <- seq.Date(start.period + 1, end.period + 1, by = "month") - 1
## plus one- minus one used as work around to buggy non-31-day months
entry.idx <- findInterval(periods, test.df$Date)
periods.df <- test.df[entry.idx,] %>%
rename(Date.updated = Date) %>%
mutate(Month.end = periods) %>%
filter(FC.rating.outlook != "Withdrawn") ## Assumes that all "withdrawn" entries are proper
return(periods.df)
}
)
countries.ls <- as.list(unique(ratings.df$Country))
periods.ls <- lapply(
countries.ls,
function(temp.country){
# temp.country <- "Philippines"
test.df <- ratings.df %>%
filter(Country == temp.country) %>%
arrange(Date)
### Start period
test.min.date <- min(test.df$Date)
start.period <- eoMonth(year(test.min.date), month(test.min.date), isWeekday = FALSE)
periods <- seq.Date(start.period + 1, end.period + 1, by = "month") - 1
## plus one- minus one used as work around to buggy non-31-day months
entry.idx <- findInterval(periods, test.df$Date)
periods.df <- test.df[entry.idx,] %>%
rename(Date.updated = Date) %>%
mutate(Month.end = periods) %>%
filter(FC.rating.outlook != "Withdrawn") ## Assumes that all "withdrawn" entries are proper
return(periods.df)
}
)
periods.df <- do.call(bind_rows, periods.ls)
periods.df <- periods.df %>%
select(
Country, Month.end,
FC.rating.long, FC.rating.short, FC.rating.outlook,
LC.rating.long, LC.rating.outlook,
Date.updated
)
period.name <- "data01_period rating view"
rds.file <- paste0(period.name, ".rds")
write.csv(
periods.df,
file.path(".", "Data", csv.file)
row.names = FALSE
)
write.csv(periods.df, file.path(".", "Data", csv.file), row.names = FALSE)
period.name <- "data01_period rating view"
csv.file <- paste0(period.name, ".csv")
rds.file <- paste0(period.name, ".rds")
write.csv(periods.df, file.path(".", "Data", csv.file), row.names = FALSE)
saveRDS(periods.df, file.path(".", "Data", rds.file))
library(ggalluvial)
install.packages("ggalluvial")
library(ggalluvial)
str(periods.df)
ggplot(periods.df) +
aes(
x = Month.end, stratum = FC.rating.long, alluvium = Country,
fill = FC.rating.long
) +
geom_stratum()
View(periods.df)
library(dplyr)
library(lubridate)
source("./Scripts/template.R")
file.path(".", "Data", "ref_ratings.RData") %>% load()
ratings.df <- file.path(".", "Data", "data00_sanitised rating actions.rds") %>% readRDS()
max.date <- as.Date("2012-08-24") # Last update
end.period <- eoMonth(year(max.date), month(max.date), isWeekday = FALSE)
countries.ls <- as.list(unique(ratings.df$Country))
periods.ls <- lapply(
countries.ls,
function(temp.country){
# temp.country <- "Philippines"
test.df <- ratings.df %>%
filter(Country == temp.country) %>%
arrange(Date)
### Start period
test.min.date <- min(test.df$Date)
start.period <- eoMonth(year(test.min.date), month(test.min.date), isWeekday = FALSE)
periods <- seq.Date(start.period + 1, end.period + 1, by = "month") - 1
## plus one- minus one used as work around to buggy non-31-day months
entry.idx <- findInterval(periods, test.df$Date)
periods.df <- test.df[entry.idx,] %>%
rename(Date.updated = Date) %>%
mutate(Month.end = periods) %>%
filter(FC.rating.outlook != "Withdrawn") ## Assumes that all "withdrawn" entries are proper
return(periods.df)
}
)
periods.df <- do.call(bind_rows, periods.ls)
?replace
str(periods.df)
periods.df <- periods.df %>%
select(
Country, Month.end,
FC.rating.long, FC.rating.short, FC.rating.outlook,
LC.rating.long, LC.rating.outlook,
Date.updated
) %>%
mutate(
FC.rating.long = replace(FC.rating.long, FC.rating.long == "-", NA)
)
View(periods.df)
periods.df$FC.rating.long
unique(periods.df$FC.rating.long)
file.path(".", "Data", "ref_ratings.RData") %>% load()
file.path(".", "Data", "ref_ratings.RData")
